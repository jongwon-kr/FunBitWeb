logging:
  level:
    org.springframework: info
server:
  port: 5000

spring:
  jwt:
    secretkey: 암호키(어느정도 길면 좋음)
  security:
    oauth2:
      client:
        provider:
          naver:
            authorization-uri: https://nid.naver.com/oauth2.0/authorize
            token-uri: https://nid.naver.com/oauth2.0/token
            user-info-uri: https://openapi.naver.com/v1/nid/me
            user-name-attribute: response
        registration:
          naver:
            client-name: naver
            client-id: naver 개발자 센터에서 발급받은 ID
            client-secret: naver 개발자 센터에서 발급받은 KEY
            redirect-uri: http://localhost:5000/login/oauth2/code/naver
            authorization-grant-type: authorization_code
            scope: name,email
          google:
            client-name: google
            client-id: Google Cloud에서 발급받은 ID
            client-secret: Google Cloud에서 발급받은 KEY
            redirect-uri: http://localhost:5000/login/oauth2/code/google
            authorization-grant-type: authorization_code
            scope: profile,email
    user:
      name: name
      password: password
  main:
    banner-mode: off
  application:
    name: FunBit
  datasource:
    url: jdbc:mysql://localhost:3306/${RDS_DB_NAME:social-media-database}
    username: ${RDS_USERNAME:social-media-user}
    password: ${RDS_PASSWORD:dummypassword}
  jpa:
    hibernate:
      naming:
        physical-strategy: org.hibernate.boot.model.naming.PhysicalNamingStrategyStandardImpl
      ddl-auto: update
    defer-datasource-initialization: true
    generate-ddl: false
    show-sql: true
    properties:
      hibernate:
        dialect: org.hibernate.dialect.MySQLDialect
      hibernate.format_sql: true
management:
  endpoints:
    web:
      exposure:
        include: "*"
